import UIKit

var greetings = """
hello world
hi city
wats up man
"""
print(greetings)

var greet = "hi man\nhi brother\nhi sister"
print(greet)

/*
\ ‚Äî —Å–∏–º–≤–æ–ª —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è;
\n ‚Äî –ø–µ—Ä–µ–Ω–æ—Å —Å—Ç—Ä–æ–∫–∏;
\t ‚Äî —Ç–∞–±—É–ª—è—Ü–∏—è;
\r ‚Äî –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –∫–∞—Ä–µ—Ç–∫–∏;
‚Äò‚Äô ‚Äî –¥–≤–æ–π–Ω—ã–µ –∫–∞–≤—ã—á–∫–∏;
\u{0-8} ‚Äî –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω—ã–µ —Å–∫–∞–ª—è—Ä–Ω—ã–µ –≤–µ–ª–∏—á–∏–Ω—ã –Æ–Ω–∏–∫–æ–¥–∞.
*/

var me = "\tOOO\n \"big data\" \n some words \u{1F496}\u{1F496}\u{1F496}\u{1F496}\u{1F496} "
print(me)

var string = String()

if string.isEmpty {
    print("Empty string")
}

let iLoveWinter = "I love winter ‚õÑ"

func printCountSymbols() {
    for w in 0...iLoveWinter.count{
            print("Count symbols:\(w)")
        let findChar = iLoveWinter[iLoveWinter.index(iLoveWinter.startIndex, offsetBy: 7)] // –Ω–∞—Ö–æ–¥–∏–º –Ω—É–∂–Ω—ã–π –Ω–∞–º —Å–∏–º–≤–æ–ª –ø–æ –æ—á–µ—Ä–µ–¥–∏
        print(findChar)
    }
}
printCountSymbols()


let someString = "Hello my friend, do you like cookies?"
 
let index = someString.firstIndex(of: ",") ?? someString.endIndex //—É–±–∏—Ä–∞–µ–º –≤—Å–µ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ—Å–ª–µ –∑–∞–ø—è—Ç–æ–π
let firstPartOfSentence = someString[..<index] //—Å–æ–∑–¥–∞–µ–º –ø–æ–¥—Å—Ç—Ä–æ–∫—É
let newSomeString = String(firstPartOfSentence)
 
print(newSomeString)

var firstString = "Hello spring!"
var secondString = "Hello Spring!"

// —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ –¥–≤—É—Ö —Å—Ç—Ä–æ–∫ –∑–Ω–∞–∫–æ–º ==
func compareStrings(){
    if firstString == secondString{
        print("We are identical")
    }
    else {
        print("We are not identical")
    }
}
compareStrings()

let mycharacter:Character = "$"
print(mycharacter)
print(type(of: mycharacter)) //type(of:) –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö

let sstring = "I love Summer!üá∞üá¨"
 
func getUTF8(){
  for code in sstring.utf8{ //—Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∞ –∫–æ–¥–∞ sstring –≤ UTF-8
    print(code)
  }
}

getUTF8()

let sttring = "I love Summer!üá∞üá¨"
 
func getUTF32(){
  for ccode in sttring.unicodeScalars{
    print(ccode.value)
  }
}
 
getUTF32()




    

